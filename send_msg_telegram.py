import asyncio
import os
from typing import Any

from aiogram import Bot

import pandas as pd

from sqlalchemy import create_engine
from sqlalchemy import text as sql_text

bot = Bot(os.getenv("BOT_TOKEN", ""))
engine = create_engine(os.getenv("DB_POSTGRESQL"))


async def send_message(
    msg: str, chat_id: str, parse_mode: str | None = None
) -> None:
    await bot.send_message(chat_id=chat_id, text=msg, parse_mode=parse_mode)


async def sql(
    sql_text_request: str, params: dict[str, Any] | None = None
) -> bool:
    try:
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL - –∑–∞–ø—Ä–æ—Å–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        with engine.connect() as connection:
            connection.execute(sql_text(sql_text_request), parameters=params)
            print(sql_text_request)
            print(params)
            connection.commit()
        return True
    except Exception as err:
        # logging.error(err)
        print(err)
        return False


async def mass_send_message(
    msg: str, resend: bool = False, parse_mode: str | None = None
) -> None:
    answer: bool = True
    if not resend:
        answer = await sql("UPDATE users SET send_msg = 'false';")
    if answer:
        info = pd.read_sql(
            "SELECT user_id FROM users WHERE send_msg = 'false';", con=engine
        )
        for idx, row in info.iterrows():
            try:
                await bot.send_message(
                    chat_id=str(row["user_id"]),
                    text=msg,
                    parse_mode=parse_mode,
                )
                await sql(
                    """UPDATE users SET send_msg = 'true'
                        WHERE user_id = :user_id;""",
                    params={"user_id": int(row["user_id"])},
                )
            except Exception as err:
                print(
                    "Error2: \
–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é! - "
                    + str(err)
                    + "\n",
                )


def go_main(
    msg: str,
    chat_id: str = "943180118",
    resend: bool = False,
    parse_mode: str | None = None,
) -> None:
    if chat_id == "all":
        asyncio.run(mass_send_message(msg, resend))
    else:
        asyncio.run(send_message(msg, chat_id, parse_mode))


if __name__ == "__main__":
    go_main(
        msg="""–ü—Ä–∏–≤–µ—Ç, —è –æ–±–Ω–æ–≤–∏–ª—Å—è!ü•≥
–¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥—Å—á–µ—Ç  Ô∏è"–ü–µ—Ä–≤–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤"‚ô¶Ô∏è,  –∞ —Ç–∞–∫–∂–µ –º–æ–≥—É \
–æ—Ç–¥–µ–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –≥–∞—Ä–∞–Ω—Ç–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –∏ –º–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ \
–≥–µ—Ä–æ—è –∏–∑ —ç—Ç–∏—Ö –∂–µ –æ—Å–∫–æ–ª–∫–æ–≤‚ô¶Ô∏è.
    """
    )
#     go_main(
#         msg="""–ü—Ä–∏–≤–µ—Ç, —è –æ–±–Ω–æ–≤–∏–ª—Å—è!ü•≥
# –¢–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–¥—Å—á–µ—Ç "–ü–µ—Ä–≤–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤"‚ô¶Ô∏è,  –∞ —Ç–∞–∫–∂–µ –º–æ–≥—É
# –æ—Ç–¥–µ–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –≥–∞—Ä–∞–Ω—Ç–∞ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –∏ –º–∏—Ñ–∏—á–µ—Å–∫–æ–≥–æ
# –≥–µ—Ä–æ—è –∏–∑ —ç—Ç–∏—Ö –∂–µ –æ—Å–∫–æ–ª–∫–æ–≤‚ô¶Ô∏è.
# """,
#         chat_id="all",
#         resend=True,
#     )
